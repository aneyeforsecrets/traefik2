version: "3.7"

########################### VOLUMES
volumes:
  db:
  nextcloud:
  apps:
  config:
  data:

services:
  db:
    container_name: db
    image: postgres:12-alpine
    restart: always
    volumes:
      - type: volume
        source: db
        target: /var/lib/postgresql/data
    networks:
      - backend
    environment:
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
    env_file:
      - ../shared/.env
    secrets:
      - postgres_db
      - postgres_password
      - postgres_user
      
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    networks:
      - backend

  app:
    image: nextcloud:apache
    restart: always
    volumes:
      - type: volume
        source: nextcloud
        target: /var/www/html
      - type: volume
        source: apps
        target: /var/www/html/custom_apps
      - type: volume
        source: config
        target: /var/www/html/config
      - type: volume
        source: data
        target: /var/www/html/data
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - NEXTCLOUD_ADMIN_PASSWORD_FILE=/run/secrets/nextcloud_admin_password
      - NEXTCLOUD_ADMIN_USER_FILE=/run/secrets/nextcloud_admin_user
      - REDIS_HOST=redis
      - APACHE_DISABLE_REWRITE_IP=1
      - TRUSTED_PROXIES=$TRUSTED_PROXIES
      - NEXTCLOUD_TRUSTED_DOMAINS=$NEXTCLOUD_TRUSTED_DOMAINS
      - NEXTCLOUD_MAIL_FROM_ADDRESS=$NEXTCLOUD_MAIL_FROM_ADDRESS
      - SMTP_HOST=$SMTP_HOST
      - SMTP_SECURE=tls
      - SMTP_PORT=587
      - SMTP_AUTHTYPE=LOGIN
    env_file:
      - ../shared/.env
    depends_on: 
      - db
      - redis
    networks:
      - t2_proxy
      - backend
    secrets:
      - nextcloud_admin_user
      - nextcloud_admin_password
      - postgres_db
      - postgres_password
      - postgres_user
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=t2_proxy"
      - "traefik.http.routers.nextcloud-secure.entrypoints=websecure"
      - "traefik.http.routers.nextcloud-secure.rule=Host(`nextcloud2.$DOMAIN`)"
      - "traefik.http.routers.nextcloud-secure.service=nextcloud"
      - "traefik.http.services.nextcloud.loadbalancer.server.scheme=http"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"

  cron:
    container_name: cron
    image: nextcloud:apache
    restart: always
    volumes:
      - type: volume
        source: nextcloud
        target: /var/www/html
      - type: volume
        source: apps
        target: /var/www/html/custom_apps
      - type: volume
        source: config
        target: /var/www/html/config
      - type: volume
        source: data
        target: /var/www/html/data
    env_file:
      - ../shared/.env
    networks:
      - backend
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

secrets:
  nextcloud_admin_password:
    file: ./secrets/nextcloud_admin_password # put admin password to this file
  nextcloud_admin_user:
    file: ./secrets/nextcloud_admin_user # put admin username to this file
  postgres_db:
    file: ./secrets/postgres_db # put postgresql db name to this file
  postgres_password:
    file: ./secrets/postgres_password # put postgresql password to this file
  postgres_user:
    file: ./secrets/postgres_user # put postgresql username to this file

networks:
  t2_proxy:
    external: true
  backend: